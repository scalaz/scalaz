# Use Docker-based container (instead of OpenVZ)
sudo: false

cache:
  directories:
    - $HOME/.ivy2/cache
    - $HOME/.sbt/launchers

language: scala
scala:
  - 2.12.2
  - 2.11.11
jdk:
  - oraclejdk8 # scalaz 7.3 does not support Java 7

script:
  - git config core.whitespace tab-in-indent,trailing-space,blank-at-eol
  - git show --oneline --check
  - sbt ++$TRAVIS_SCALA_VERSION -J-Xmx3784m check-gen-type-classes "project $TEST_PROJECT" test:compile
  - sbt ++$TRAVIS_SCALA_VERSION "project $TEST_PROJECT" test "project /" $(if [[ "${TEST_PROJECT}" == "rootJVM" ]]; then echo "publishLocal"; fi)

before_cache:
  # Tricks to avoid unnecessary cache updates
  - find $HOME/.sbt -name "*.lock" | xargs rm
  - find $HOME/.ivy2 -name "ivydata-*.properties" | xargs rm

env:
  matrix:
  - TEST_PROJECT="rootJVM"
  - TEST_PROJECT="rootJS"

addons:
  apt:
    packages:
      - oracle-java8-installer

matrix:
  include:
  - scala: 2.13.0-M2
    jdk: oraclejdk8
    env: TEST_PROJECT="rootJVM"
    script:
    - git clone -b v0.9.4 https://github.com/non/kind-projector.git
    - cd kind-projector
    - sbt ++${TRAVIS_SCALA_VERSION} 'set libraryDependencies ~= {_.filterNot(_.organization == "org.ensime")}' publishLocal
    - cd ..
    - sbt ++${TRAVIS_SCALA_VERSION} -J-Xmx3784m checkGenTypeClasses coreJVM/compile effectJVM/compile iterateeJVM/compile
  - scala: 2.13.0-M2
    jdk: oraclejdk8
    env: TEST_PROJECT="rootJS"
    script:
    - git clone -b v0.9.4 https://github.com/non/kind-projector.git
    - cd kind-projector
    - sbt ++${TRAVIS_SCALA_VERSION} 'set libraryDependencies ~= {_.filterNot(_.organization == "org.ensime")}' publishLocal
    - cd ..
    - sbt ++${TRAVIS_SCALA_VERSION} -J-Xmx3784m checkGenTypeClasses coreJS/compile effectJS/compile iterateeJS/compile
  - scala: 2.11.11
    jdk: oraclejdk8
    sudo: required
    dist: trusty
    before_install:
    - curl https://raw.githubusercontent.com/scala-native/scala-native/v0.3.1/bin/travis_setup.sh | bash -
    script:
    - ./sbt ++$TRAVIS_SCALA_VERSION nativeTest/run nativeTest/publishLocal
